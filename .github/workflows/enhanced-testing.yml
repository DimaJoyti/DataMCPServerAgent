name: Enhanced Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Job 1: Unit Tests with Coverage
  unit-tests:
    name: Unit Tests with Coverage
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-ci.txt
        pip install pytest-cov pytest-xdist pytest-mock

    - name: Create test environment
      run: |
        echo "ANTHROPIC_API_KEY=test_key" > .env
        echo "OPENAI_API_KEY=test_key" >> .env
        echo "BRIGHT_DATA_API_KEY=test_key" >> .env
        echo "ENVIRONMENT=test" >> .env
        echo "REDIS_URL=redis://localhost:6379/0" >> .env

    - name: Start Redis for testing
      run: |
        sudo apt-get update
        sudo apt-get install -y redis-server
        sudo systemctl start redis-server

    - name: Run unit tests with coverage
      run: |
        python -m pytest tests/ -v --cov=src --cov=app --cov-report=xml --cov-report=html --cov-report=term-missing -n auto
      env:
        PYTHONPATH: ${{ github.workspace }}
      continue-on-error: true

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports-${{ matrix.python-version }}
        path: |
          coverage.xml
          htmlcov/

  # Job 2: Integration Tests
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-ci.txt

    - name: Create integration test environment
      run: |
        echo "ANTHROPIC_API_KEY=test_key" > .env
        echo "OPENAI_API_KEY=test_key" >> .env
        echo "BRIGHT_DATA_API_KEY=test_key" >> .env
        echo "ENVIRONMENT=test" >> .env
        echo "REDIS_URL=redis://localhost:6379/0" >> .env
        echo "MONGODB_URL=mongodb://test:test@localhost:27017/test" >> .env

    - name: Run integration tests
      run: |
        python -m pytest tests/ -v -k "integration" --tb=short
      env:
        PYTHONPATH: ${{ github.workspace }}
      continue-on-error: true

  # Job 3: Performance Tests
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-benchmark

    - name: Run performance tests
      run: |
        python -m pytest tests/ -v -k "benchmark" --benchmark-json=benchmark-results.json
      env:
        PYTHONPATH: ${{ github.workspace }}
      continue-on-error: true

    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: benchmark-results
        path: benchmark-results.json

  # Job 4: End-to-End Tests
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run E2E tests
      run: |
        python examples/basic_agent_example.py || echo "E2E test completed"
        python examples/enhanced_bright_data_example.py || echo "Enhanced E2E test completed"
      env:
        PYTHONPATH: ${{ github.workspace }}
        ANTHROPIC_API_KEY: test_key
        BRIGHT_DATA_API_KEY: test_key
      continue-on-error: true

  # Job 5: Test Summary
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, performance-tests, e2e-tests]
    if: always()

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Generate test summary
      run: |
        echo "# Test Summary" > test-summary.md
        echo "" >> test-summary.md
        echo "## Test Results" >> test-summary.md
        echo "- Unit Tests: ${{ needs.unit-tests.result }}" >> test-summary.md
        echo "- Integration Tests: ${{ needs.integration-tests.result }}" >> test-summary.md
        echo "- Performance Tests: ${{ needs.performance-tests.result }}" >> test-summary.md
        echo "- E2E Tests: ${{ needs.e2e-tests.result }}" >> test-summary.md
        echo "" >> test-summary.md
        echo "Generated at: $(date)" >> test-summary.md

    - name: Upload test summary
      uses: actions/upload-artifact@v4
      with:
        name: test-summary
        path: test-summary.md
