name = "agent-worker"
main = "agent-worker.js"
compatibility_date = "2024-05-26"
compatibility_flags = ["nodejs_compat"]

# Durable Objects
[[durable_objects.bindings]]
name = "AGENT_STATE"
class_name = "AgentDurableObject"

[[durable_objects.bindings]]
name = "WORKFLOW_ENGINE"
class_name = "WorkflowDurableObject"

# KV Namespaces
[[kv_namespaces]]
binding = "AGENT_SESSIONS"
id = "your_kv_namespace_id_here"
preview_id = "your_preview_kv_namespace_id_here"

[[kv_namespaces]]
binding = "AGENT_CONFIG"
id = "your_config_kv_namespace_id_here"
preview_id = "your_preview_config_kv_namespace_id_here"

# R2 Buckets
[[r2_buckets]]
binding = "AGENT_STORAGE"
bucket_name = "agent-storage"

# D1 Databases
[[d1_databases]]
binding = "AGENT_DB"
database_name = "agent-database"
database_id = "your_d1_database_id_here"

# Environment Variables
[env.production.vars]
ENVIRONMENT = "production"
LOG_LEVEL = "INFO"
API_BASE_URL = "https://your-domain.com"

[env.staging.vars]
ENVIRONMENT = "staging"
LOG_LEVEL = "DEBUG"
API_BASE_URL = "https://staging.your-domain.com"

# Secrets (set via wrangler secret put)
# CLOUDFLARE_API_TOKEN
# SECRET_KEY
# JWT_SECRET_KEY
# ENCRYPTION_KEY

# Routes
[[routes]]
pattern = "your-domain.com/api/*"
zone_name = "your-domain.com"

# Custom domains
[[routes]]
pattern = "agents.your-domain.com/*"
zone_name = "your-domain.com"

# Cron triggers for cleanup
[[triggers.crons]]
cron = "0 2 * * *"  # Daily at 2 AM

# Analytics Engine
[analytics_engine_datasets]
[[analytics_engine_datasets.bindings]]
name = "AGENT_ANALYTICS"
dataset = "agent_metrics"

# Hyperdrive (for database connections)
[[hyperdrive]]
binding = "HYPERDRIVE"
id = "your_hyperdrive_id_here"

# Vectorize (for AI embeddings)
[[vectorize]]
binding = "VECTORIZE"
index_name = "agent-embeddings"

# AI binding for Cloudflare AI
[ai]
binding = "AI"

# Queue bindings for async processing
[[queues.producers]]
binding = "AGENT_QUEUE"
queue = "agent-tasks"

[[queues.consumers]]
queue = "agent-tasks"
max_batch_size = 10
max_batch_timeout = 30

# Browser rendering
[browser]
binding = "BROWSER"

# Limits
[limits]
cpu_ms = 30000  # 30 seconds
memory_mb = 128

# Build configuration
[build]
command = "npm run build"
cwd = "."
watch_dir = "src"

# Miniflare configuration for local development
[miniflare]
kv_persist = true
d1_persist = true
r2_persist = true
durable_objects_persist = true

# Compatibility settings
[compatibility_flags]
nodejs_compat = true
streams_enable_constructors = true
transformstream_enable_standard_constructor = true

# Placement
[placement]
mode = "smart"
